/* globals themeBuyTickets, themeUx, Pikaday, moment */
'use strict';
//animation top menu
;(function ( $ ) {
	window.themeTopMenu = {
		init: function () {
			themeTopMenu.initProps();
			themeTopMenu.attachEvents();
		},
		initProps: function () {
			themeTopMenu.$buyTickets = $( '#buy-tickets' );
			themeTopMenu.$buyTicketsHeader = $( '#buy-tickets-header' );
			themeTopMenu.$menu = $( '#site-header' );
			if ( themeTopMenu.$buyTickets.length ) {
				themeTopMenu.$buyTicketsTop = themeTopMenu.$buyTickets.offset().top;
			}
			themeTopMenu.$homePage = $( '#home-page' );
			themeTopMenu.$page = $( '#page' );
			themeTopMenu.$templatePage = $( '#template-page' );
			themeTopMenu.heightPromo = themeTopMenu.$templatePage.find( '.promo-block' ).height() || 0;
			themeTopMenu.imageElement = themeTopMenu.$homePage.find( '.site-branding' );
			themeTopMenu.menuHeight = themeTopMenu.$menu.height();
			themeTopMenu.menuOuterHeight = themeTopMenu.$menu.outerHeight();
			themeTopMenu.submenu = $( '.customizer-top-menu-show ul.sub-menu' );
			themeTopMenu.fixedBuyTicketsTop = themeTopMenu.menuOuterHeight;
			if ( themeUx.$body.hasClass( 'admin-bar' ) ) {
				themeTopMenu.fixedBuyTicketsTop += 32;
			}
		},
		attachEvents: function () {
			$( window ).resize( function () {
				themeTopMenu.menuOuterHeight = $( '.customizer-top-menu-show ul.menu' ).outerHeight();
				themeTopMenu.animationTopMenu();
			} );

			$( window ).scroll( function () {
				themeTopMenu.animationTopMenu();
			} );
			themeTopMenu.animationTopMenu();

		},
		animationTopMenu: function () {
			if ( window.pageYOffset >= 120 ) {
				themeTopMenu.imageElement.addClass( 'active' );
			} else {
				themeTopMenu.imageElement.removeClass( 'active' );
			}
			if ( window.pageYOffset >= themeTopMenu.heightPromo ) {
				themeTopMenu.$templatePage.find( '#site-header' ).addClass( 'fixed-menu' );
			} else {
				themeTopMenu.$templatePage.find( '#site-header' ).removeClass( 'fixed-menu' );
			}
		}
	};
})( jQuery );

(function ( $ ) {
	window.themeBuyTickets = {
		init: function () {
			themeBuyTickets.initProps();
			themeBuyTickets.attachEvents();
		},
		initProps: function () {
			themeBuyTickets.$datepickerModal = $( '.datepicker-modal' );
			themeBuyTickets.$blogPanel = $( '#blog-panel' );
			themeBuyTickets.$datepickerModalContainer = $( '#datepicker-modal-container' );
			themeBuyTickets.$dateBoxes = $( '.date-box' );
			themeBuyTickets.$buyTicketsHdr = $( '#buy-tickets-header' );
			themeBuyTickets.$dateField = $( '#buytickets-datepicker' );
			themeBuyTickets.initPicker( themeBuyTickets.$datepickerModalContainer.get( 0 ), themeBuyTickets.$dateField.get( 0 ) );
		},
		attachEvents: function () {
			// affix the date nav when scrolled down
			themeUx.$document.ready( themeBuyTickets.affixDateNav );
			themeUx.$window.on( 'resize scroll', themeBuyTickets.affixDateNav );

			// fix the datepicker modal height so it can have rounded corners
			themeUx.$window.on( 'resize', themeBuyTickets.fixDatepickerModalHeight );

			// close the datepicker modal
			themeBuyTickets.$datepickerModal.find( '.close-modal' ).on( 'click', themeBuyTickets.closeDatepickerModal );

			// choose a day in the days nav
			themeBuyTickets.$dateBoxes.on( 'click', function ( e ) {
				themeBuyTickets.onDayClick( e );
			} );
			$( '#buy-tickets-listview' ).find( '.no-showtimes a' ).on( 'click', function ( e ) {
				var $dateBox = themeBuyTickets.$dateBoxes.filter( '[data-date=' + $( this ).data( 'date' ) + ']' );
				if ( $dateBox.length ) {
					e.preventDefault();
					$dateBox.trigger( 'click' )
				} else {
					return true;
				}
			} );
		},
		affixDateNav: function () {
			var $buyTicketsHeader = $( '#buy-tickets-header' );
			if ( !$buyTicketsHeader.get( 0 ) ) {
				return;
			}
			var $buyTicketsHeaderContainer = $( '#buy-tickets-header-container' );

			var $buyTicketsHeaderInner = $( '#buy-tickets-header-inner' );
			var winTop = themeUx.$window.scrollTop(),
				datepickerOffset = $buyTicketsHeaderContainer.offset().top - $( '.customizer-top-menu-show ul.menu' ).outerHeight(),
				newWidth = $( '#buy-tickets-listview' ).css( 'width' ),
				$buyTickets = $( '#buy-tickets' );

			if ( $( 'html' ).outerWidth() <= 1024 ) {
				datepickerOffset = $buyTicketsHeaderContainer.offset().top - 44;
			}

			$( window ).resize( function () {
				if ( $( 'html' ).outerWidth() <= 1024 ) {
					datepickerOffset = $buyTicketsHeaderContainer.offset().top - 44;
				}
			} );

			if ( $( '.admin-bar' ).length === 1 ) {

				if ( $( 'html' ).outerWidth() > 1024 ) {
					datepickerOffset = $buyTicketsHeaderContainer.offset().top - ($( '.customizer-top-menu-show ul.menu' ).outerHeight() + 32);
				} else if ( $( 'html' ).outerWidth() <= 1024 && $( 'html' ).outerWidth() > 782 ) {
					datepickerOffset = $buyTicketsHeaderContainer.offset().top - 76;
				} else if ( $( 'html' ).outerWidth() <= 782 ) {
					datepickerOffset = $buyTicketsHeaderContainer.offset().top - 90;
				}
				$( window ).resize( function () {
					if ( $( 'html' ).outerWidth() > 1024 ) {
						datepickerOffset = $buyTicketsHeaderContainer.offset().top - ($( '.customizer-top-menu-show ul.menu' ).outerHeight() + 32);
					} else if ( $( 'html' ).outerWidth() <= 1024 && $( 'html' ).outerWidth() > 782 ) {
						datepickerOffset = $buyTicketsHeaderContainer.offset().top - 76;
					} else if ( $( 'html' ).outerWidth() <= 782 ) {
						datepickerOffset = $buyTicketsHeaderContainer.offset().top - 90;
					}
				} );
			}

			if ( winTop >= datepickerOffset - 1 ) {
				$buyTicketsHeader.addClass( 'fixed' );
				//$buyTicketsHeaderInner.css( 'width', newWidth );
				$buyTickets.addClass( 'fixed-header' );
				themeBuyTickets.$blogPanel.css( 'margin-top', '-13px' );
			} else {
				$buyTicketsHeader.removeClass( 'fixed' );
				//$buyTicketsHeaderInner.css( 'width', '' );
				$buyTickets.removeClass( 'fixed-header' );
				themeBuyTickets.$blogPanel.css( 'margin-top', '0' );
			}
		},
		fixDatepickerModalHeight: function () {
			if ( themeBuyTickets.$datepickerModal.hasClass( 'active' ) ) {
				var winHeight = themeUx.$window.height() - 25;
				themeBuyTickets.$datepickerModalContainer.css( 'max-height', winHeight );
			}
		},
		closeDatepickerModal: function () {
			themeBuyTickets.picker.hide();
			themeBuyTickets.$datepickerModal.removeClass( 'active' );
			$( 'body' ).removeClass( 'modal-open' );
		},
		onDayClick: function ( e ) {
			if ( themeBuyTickets.$buyTicketsHdr.hasClass( 'date-loading' ) ) {
				return;
			}
			var $dateBox = $( e.delegateTarget ),
				date = $dateBox.data( 'date' ),
				offset = $dateBox.data( 'offset' );
			if ( $dateBox.hasClass( 'disabled' ) ) {
				return;
			}

			themeBuyTickets.$buyTicketsHdr.addClass( 'date-loading' );
			themeBuyTickets.loadShowtimes( date );
			themeBuyTickets.selectDateNav( $dateBox );
			themeBuyTickets.setDateUrl( date, offset );
		},
		initPicker: function ( container, field ) {
			if ( !container || !field || typeof themeScheduledDates === 'undefined' ) {
				return;
			} // no container, nothing to do
			themeBuyTickets.picker = new Pikaday( {
				field: field,
				container: container,
				numberOfMonths: 1,
				minDate: new Date(),
				maxDate: moment( window.themeScheduledDates[ window.themeScheduledDates.length - 1 ] ).toDate(),

				disableDayFn: function ( date ) {
					return !themeBuyTickets.checkDayHasShowtimes( date )
				},

				onSelect: function () {
					var selected = this.getMoment();
					themeBuyTickets.loadShowtimes( selected );
					themeBuyTickets.setDaysNav( selected.format() );
					themeBuyTickets.selectDateNav( themeBuyTickets.$dateBoxes.filter( ':first' ) );
					themeBuyTickets.setDateUrl( selected );
					$( '.dates-wrapper' ).addClass( 'fade-in' );
					$( container ).trigger( 'selected', [ selected.format( 'YYYYMMDD' ) ] );
				},
				onOpen: function () {
					themeBuyTickets.$datepickerModal.addClass( 'active' );
					themeUx.$body.addClass( 'modal-open' );
					var winHeight = themeUx.$window.height() - 25;
					themeBuyTickets.$datepickerModalContainer.css( 'max-height', winHeight );
					$( '.dates-wrapper' ).removeClass( 'fade-in' );
				},
				onClose: function () {
					themeBuyTickets.$datepickerModal.removeClass( 'active' );
					themeUx.$body.removeClass( 'modal-open' );
					this.destroy();
					themeBuyTickets.initPicker( themeBuyTickets.$datepickerModalContainer.get( 0 ), themeBuyTickets.$dateField.get( 0 ) );
				}
			} );
		},
		checkDayHasShowtimes: function ( date ) {
			var dayMoment = moment( date );
			return ($.inArray( dayMoment.format( 'YYYY-MM-DD' ), window.themeScheduledDates || [] ) > -1);
		},
		getShowtimesUrl: function ( date ) {
			date = !moment.isMoment( date ) ? moment( date ) : date;
			return window.themeSettings.homeUrl + '/' + date.format( 'YYYY-MM-DD' ) + '/';
		},
		selectDateNav: function ( $dateBox ) {
			$( '.date-box' ).removeClass( 'selected' );
			$dateBox.addClass( 'selected' );
		},
		loadShowtimes: function ( selected ) {
			var $buyTicketsListview = $( '#buy-tickets-listview' ),
				loaderHeight = $buyTicketsListview.height(),
				animElTop = $buyTicketsListview.find( '.show-thumbnail:first' ).height(),
				$loaderContainer = $( '#loader-container' ),
				listOffset = $( '#buy-tickets' ).offset().top;
			$loaderContainer.show();
			$( 'body, html' ).animate( { scrollTop: listOffset }, '500' );

			window.selectedDate = !moment.isMoment( selected ) ? moment( selected ) : selected;
			$buyTicketsListview.empty().load( this.getShowtimesUrl( selected ) + ' .show-details', function () {
				$loaderContainer.hide();
				themeUx.$window.trigger( 'resize' );
				themeBuyTickets.$buyTicketsHdr.removeClass( 'date-loading' );
			} );

		},
		setDaysNav: function ( firstDay ) {
			var $dateContainers = $( '.date-box' ),
				currentDay = !moment.isMoment( firstDay ) ? moment( firstDay ) : firstDay;

			$dateContainers.each( function ( i, e ) {
				var dayText = '',
					$e = $( e );
				if ( currentDay.format( 'DDD' ) === moment().format( 'DDD' ) ) {
					dayText = 'Today';
				} else if ( currentDay.format( 'DDD' ) === moment().format( 'DDD' ) + 1 ) {
					dayText = 'Tomorrow';
				} else {
					dayText = currentDay.format( 'dddd' );
				}
				if ( themeBuyTickets.checkDayHasShowtimes( currentDay.toDate() ) ) {
					dayText += ' <span>' + currentDay.format( 'MMM D' ) + '</span>';
					$e.removeClass( 'disabled' ).attr( 'href', themeBuyTickets.getShowtimesUrl( currentDay.format( 'YYYY-MM-DD' ) ) );
				}
				else {
					dayText += ' <span>No Showtimes</span>';
					$e.addClass( 'disabled' ).removeAttr( 'href' );
				}
				$e.html( dayText );
				$e.data( 'date', currentDay.format( 'YYYY-MM-DD' ) );
				currentDay.add( 1, 'days' );
			} );
		},
		setDateUrl: function ( date, offset ) {
			offset = offset || 0;

			if ( window.history.replaceState ) {
				window.history.replaceState( '', '', this.getShowtimesUrl( date ) + offset + '/' );
			}
		}
	};
})( jQuery );

/* jshint camelcase: false */
/* globals themeCheckout, BOOKING_FEE, Raven */

(function ( $ ) {
	window.themeSingleShow = {
		init: function () {
			themeSingleShow.initProps();
			themeSingleShow.attachEvents();
		},
		initProps: function () {
			themeSingleShow.$window = $( 'window' );
			themeSingleShow.$thumbnails = $( '.show-container' );
			themeSingleShow.$showtimesDescription = $( '.showtimes-description' );
			themeSingleShow.descriptionExpanded = false;
			themeSingleShow.$screeningPosterThumbnail = $( '.screening-poster-thumbnail' );

			themeSingleShow.$showDetails = $( '.show-details' );
			themeSingleShow.$dateSelector = $( '.date-selector' );
		},
		attachEvents: function () {
			themeUx.$window.bind( 'load scroll resize', themeSingleShow.animateThumbnails );
			themeUx.$window.bind( 'load', themeSingleShow.normalizePosterThumbnails );
			themeUx.$window.bind( 'scroll resize', themeSingleShow.stickyDatepicker );
		},
		normalizePosterThumbnails: function () {
			themeSingleShow.$screeningPosterThumbnail.each( function () {
				var $this = $( this ),
					posterImgHeight = $this.find( 'img' ).height(),
					posterHeight = $this.width() * 1.4815;
				if ( posterHeight > posterImgHeight ) {
					$this.addClass( 'short-poster' );
				}
			} );
		},
		stickyDatepicker: function () {
			var winTop = themeUx.$window.scrollTop(),
				showDetailsOffset = themeSingleShow.$showDetails.offset().top;
			if ( winTop >= showDetailsOffset ) {
				themeSingleShow.$dateSelector.addClass( 'sticky-date' );
			} else {
				themeSingleShow.$dateSelector.removeClass( 'sticky-date' );
			}
		}
	};
})( jQuery );
(function ( $ ) {
	'use strict';
	$( function () {
		if ( typeof ga === 'undefined' ) {
			console.error( '[GA] undefined]' );
			if ( typeof Raven !== 'undefined' ) {
				Raven.captureMessage( '[GA] undefined]', { level: 'warning' } )
			}
			return;
		}

		$( document ).on( 'click', '.date-box:not(.selected), .date-box:not(.disabled)', function () {
			var $this = $( this ),
				eventFields = {
					hitType: 'event',
					eventCategory: 'Date Picker',
					eventAction: 'select',
					eventLabel: 'Buy Tickets Large',
					eventValue: ($this.data( 'date' ) || '').replace( /\-/g, '' )
				};
			ga( 'send', eventFields );
		} );

		$( document ).on( 'selected', '#datepicker-modal-container', function ( e, date ) {
			var $this = $( this ),
				eventFields = {
					hitType: 'event',
					eventCategory: 'Date Picker',
					eventAction: 'select',
					eventLabel: 'Buy Tickets Calendar',
					eventValue: date
				};
			ga( 'send', eventFields );
		} );

		$( document ).on( 'click', '.date-selector li.show-date', function ( e ) {
			var $this = $( this ),
				$wrapper = $this.parents( '.date-selector' ),
				eventFields = {
					hitType: 'event',
					eventCategory: 'Date Picker',
					eventAction: 'select',
					eventLabel: 'Show Detail',
					eventValue: $wrapper.data( 'show-id' ) + '.' + $this.data( 'date' )
				};
			ga( 'send', eventFields );
		} );

		$( document ).on( 'click', '#coming-soon-header a.filter', function () {
			var $this = $( this ),
				$wrapper = $this.parents( '.date-selector' ),
				eventFields = {
					hitType: 'event',
					eventCategory: 'Coming Soon Header',
					eventAction: 'select',
					eventLabel: $this.data( 'target' ).replace( '#', '' )
				};
			ga( 'send', eventFields );
		} );

		$( document ).on( 'checkout-error', function ( e, info ) {
			var eventFields = {
				hitType: 'event',
				eventCategory: 'Checkout',
				eventAction: info.type,
				eventLabel: info.details
			};
			ga( 'send', eventFields );
		} );

		$( document ).on( 'checkout-success', function ( e, info ) {
			var eventFields = {
				hitType: 'event',
				eventCategory: 'Checkout',
				eventAction: info.type,
				eventLabel: info.details.orderId,
				eventValue: info.details.postId
			};
			ga( 'send', eventFields );
		} );

		$( document ).on( 'click', 'a[data-trailer]', function () {
			var $this = $( this ),
				$link = $this.parent().siblings( '.overlay-link' ),
				slug = ($link.attr( 'href' ) || '').match( /movies\/(.*)\/$/ ),
				eventFields = {
					hitType: 'event',
					eventCategory: 'Watch Trailer',
					eventAction: 'click',
					eventLabel: !!slug ? slug[ 1 ] : null,
				};
			ga( 'send', eventFields );
		} );
	} );
})( jQuery );

(function ( $ ) {
	window.themeUx = {
		init: function () {
			themeUx.initProps();
			themeUx.attachEvents();
			themeUx.externalTicketingLinks();
			themeBuyTickets.init();
			if ( themeUx.$body.hasClass( 'page-top-menu' ) ) {
				themeTopMenu.init();
			}
			if ( themeUx.$body.hasClass( 'single-show' ) ) {
				themeSingleShow.init();
			}
			if ( themeUx.$body.hasClass( 'checkout' ) || themeUx.$body.hasClass( 'page-template-donate-template' ) ) {
				themeCheckout.init();
			}
			if ( themeUx.$body.hasClass( 'single-membership_plan' ) ) {
				themeMembership.init();
			}

			if ( themeUx.$body.hasClass( 'membership-update' ) ) {
				themeMembershipUpdate.init();
			}

			if ( themeUx.$body.hasClass( 'single-ticket_pack_offer' ) ) {
				themeTicketPack.init();
			}

			if ( null !== document.getElementById( 'virtual-cinema-panel' ) ) {
				virtualCinemaPanel.init();
			}

		},
		initProps: function () {
			themeUx.$window = $( window );
			themeUx.$document = $( document );
			themeUx.$body = $( 'body' );
			themeUx.$thumbnailsContainer = $( '.thumbnails-container' );
			themeUx.$showDatelist = $( '.show-datelist' );
			themeUx.$datelist = $( '.datelist' );
			themeUx.$showTrailerModal = $( '.show-trailer-modal' );
			themeUx.$closeTrailerModal = $( '.trailer-modal .close-modal, .trailer-modal .modal-backdrop' );
			themeUx.$navToggle = $( '.nav-button-toggle' );
			themeUx.$filters = $( '.filter-container a' );
			themeUx.$slider = $( '.lightning_slideshow' );
			themeUx.$showNewsletterModal = $( '.show-newsletter-signup-modal' );
			themeUx.$closeNewsletterModal = $( '.newsletter-signup-modal .close-modal, .newsletter-signup-modal .modal-backdrop' );
			themeUx.$mobileNavLinks = $( '#sidebar #footer-nav a, #sidebar #primary-nav a, #sidebar .site-title a' );
			themeUx.$closeDatelistX = $( '.mobile-close-date-selector, .show-date' );
			themeUx.$videoHero = $( '#video-hero' );
			themeUx.$scrollToAnchor = $( '.scroll-to' );
			themeUx.$showList = $( '.fauxselect .show-list' );
			themeUx.$list = $( '.fauxselect .list' );
		},
		attachEvents: function () {

			// animate thumbnails
			if ( themeUx.$thumbnailsContainer.length ) {
				themeUx.animateThumbnails();
				themeUx.$window.on( 'scroll resize', themeUx.animateThumbnails );
			}

			// open the single show date dropdowns
			themeUx.$showDatelist.on( 'click', function ( e ) {
				themeUx.openDatelist( e )
			} );

			// close the single show date dropdowns
			themeUx.$closeDatelistX.on( 'click', function () {
				themeUx.closeDatelist()
			} );

			// select a date in the single show dropdowns
			themeUx.$datelist.find( 'li' ).click( function ( e ) {
				themeUx.selectDatelistDate( e )
			} );

			// make sure the extra and series for the first date are showing
			themeUx.$datelist.each( function ( i, e ) {
				$( this ).find( 'li' ).filter( ':first' ).trigger( 'click' );
			} );

			// open trailers
			themeUx.$document.on( 'click', '.show-trailer-modal', themeUx.openTrailerModal );

			// close trailers
			themeUx.$document.on( 'click', '.trailer-modal .close-modal, .trailer-modal .modal-backdrop', themeUx.closeTrailerModal );

			// toggle the mobile nav
			themeUx.$navToggle.on( 'click', function ( e ) {
				e.preventDefault();
				themeUx.toggleNav( e );
			} );

			// filters
			themeUx.$filters.on( 'click', function ( e ) {
				themeUx.toggleFilter( e );
			} )

			// sliders
			themeUx.initializeSlider();

			// open newsletter signup modal
			themeUx.$document.on( 'click', '.show-newsletter-signup-modal', function ( e ) {
				themeUx.openNewsletterModal( e )
			} );

			// close newsletter signup modal
			themeUx.$document.on( 'click', '.newsletter-signup-modal .close-modal, .newsletter-signup-modal .modal-backdrop', themeUx.closeNewsletterModal );

			themeUx.attachFauxselect();

			// video hero
			themeUx.launchVideoHero();

			// check for mobile
			themeUx.checkMobile();

			themeUx.$scrollToAnchor.on( 'click', themeUx.scrollTo );

			// Checkout section toggles.
			themeUx.initCheckoutSectionToggles();

		},

		attachFauxselect: function () {
			// open the styled select dropdown
			themeUx.$showList.on( 'click', function ( e ) {
				themeUx.openDropdownList( e );
			} );

			// close the styled select dropdown
			themeUx.$document.on( 'click', function ( e ) {
				themeUx.closeDropdownList( e );
			} );
		},
		externalTicketingLinks: function () {
			$( 'a.showtime' ).filter( function () {
				return !!this.hostname && this.hostname !== location.hostname;
			} ).attr( 'target', '_blank' );
		},
		animateThumbnails: function () {
			var bottom = themeUx.$window.scrollTop() + themeUx.$window.height();
			themeUx.$thumbnailsContainer.find( '.thumbnail' ).each( function () {
				var $this = $( this );
				if ( $this.offset().top < bottom + 20 ) {
					$this.addClass( 'animate_active' );
				}
			} );
		},
		openDatelist: function ( e ) {
			$( e.target ).closest( '.date-selector:not(:has(.single-date))' ).toggleClass( 'active' ).find( '.datelist' ).toggleClass( 'active' );
			themeUx.$body.toggleClass( 'mobile-modal-open' );
		},
		closeDatelist: function () {
			themeUx.$datelist.removeClass( 'active' );
			$( '.date-selector' ).removeClass( 'active' )
			themeUx.$body.removeClass( 'mobile-modal-open' );
		},
		selectDatelistDate: function ( e ) {
			var $clickedDate = $( e.target ).closest( 'li' ),
				$dateSelector = $clickedDate.closest( '.date-selector' ),
				$showtimesContainer = $dateSelector.next( '.single-show-showtimes' ).find( '.showtimes-container' ),
				$showContainer = $dateSelector.closest( '.show-details' ),
				selectedDate = $clickedDate.html(),
				show = _.findWhere( window[ 'theme_posts' ], { ID: $dateSelector.data( 'show-id' ) } ),
				date = $clickedDate.data( 'date' );
			$dateSelector.find( '.selected-date' ).html( selectedDate );
			$dateSelector.find( '.datelist li' ).removeClass( 'selected' );
			$clickedDate.addClass( 'selected' );
			if ( show && date && show[ 'dates' ][ date ][ 'showtimes' ] ) {
				var showtimes = [];
				$showContainer.find( '.extra a, .extra span, .pill' ).hide();
				_.each( show[ 'dates' ][ date ][ 'showtimes' ], function ( showtime ) {
					var tag = 'a';
					if ( showtime._sold_out === 'on' || showtime.ticket_types.length === 0 ) {
						tag = 'span'
					}
					var $showtime = $( '<' + tag + ' class="showtime" href="' + (tag == 'a' ? showtime.purchase_link : '') + '"></' + tag + '>' ),
						time = moment.unix( showtime._datetime );
					if ( !!showtime._midnight ) {
						$showtime.text( 'MIDNIGHT' )
					} else {
						$showtime.text( time.tz( themeSettings.timezone ).format( 'h:mm a' ) )
					}
					if ( showtime._sold_out === 'on' ) {
						$showtime.addClass( 'sold-out' );
						showtime.extra_abbreviated = 'Sold Out';
					}
					if ( showtime.extra_abbreviated ) {
						$showtime.append( '<span class="extra">' + showtime.extra_abbreviated + '</span>' ).addClass( 'has-extra' )
					}
					if ( showtime.ticket_types.length == 0 ) {
						$showtime.addClass( 'no-tickets' );
					}
					$( '#showtime-extra-' + showtime.ID ).show();
					$( '.pill.series-showtime-' + showtime.ID ).show();
					showtimes.push( $showtime );
				} );
				$showtimesContainer.fadeOut( 'fast', function () {
					$( this ).empty().append( showtimes ).fadeIn( 600, 'swing' );
					if ( $clickedDate.data( 'has-midnight' ) == 1 ) {
						$clickedDate.closest( '.show-details' ).find( '.midnight-screening-note' ).show().css( 'display', 'flex' );
					} else {
						$clickedDate.closest( '.show-details' ).find( '.midnight-screening-note' ).hide();
					}
				} );
			}
		},
		openTrailerModal: function ( e ) {
			e.preventDefault();
			var $trailerBtn = $( this ),
				$trailerUrl = $trailerBtn.attr( 'data-trailer' );
			var $modal = $( '.trailer-modal' );
			$modal.find( '.iframe-holder-inner' ).html( $trailerUrl );
			$modal.addClass( 'active' );
		},
		closeTrailerModal: function () {
			var videoContent = $( '.modal.active .iframe-holder' ).html();
			$( '.modal.active .iframe-holder' ).html( videoContent );
			$( '.modal.active' ).removeClass( 'active' );
		},
		toggleNav: function ( e ) {
			$( '#mobile-nav' ).toggleClass( 'drawer-open' );
			themeUx.$body.toggleClass( 'modal-open blur-background' );
		},
		toggleFilter: function ( e ) {
			e.preventDefault();
			if ( target != '' ) {
				var $clicked = $( e.delegateTarget ),
					target = $clicked.data( 'target' ),
					$target = $( target );

				// toggle selected filter
				$clicked.siblings().removeClass( 'selected' );
				$clicked.addClass( 'selected' );

				// toggle selected content
				$target.siblings().removeClass( 'active' );
				$target.addClass( 'active' );

				// handle form fields
				$target.siblings().find( 'input, select' ).prop( 'disabled', true );
				$target.find( 'input, select' ).prop( 'disabled', false );

			}
		},
		initializeSlider: function () {
			themeUx.$slider.each( function () {
				var slickInduvidual = $( this );
				slickInduvidual.on( 'init reInit afterChange', function ( event, slick, currentSlide, nextSlide ) {
					console.log( slick.slideCount );
					var i = (currentSlide ? currentSlide : 0) + 1;
					slickInduvidual.closest( '.lightning_slideshow_container' ).find( '.counter' ).text( i + ' of ' + slick.slideCount );
				} );

				slickInduvidual.slick( {
					nextArrow: slickInduvidual.closest( '.lightning_slideshow_container' ).find( '.gallery-arrow-right' ),
					prevArrow: slickInduvidual.closest( '.lightning_slideshow_container' ).find( '.gallery-arrow-left' )
				} );
			} );
		},
		openNewsletterModal: function ( e ) {
			e.preventDefault();
			var $modal = $( '.newsletter-signup-modal' );
			$modal.addClass( 'active' );
		},
		closeNewsletterModal: function () {
			$( '.modal.active' ).removeClass( 'active' );
		},
		openDropdownList: function ( e ) {
			$( e.target ).next( '.list' ).toggleClass( 'active' );
			$( 'body' ).toggleClass( 'list-active' );
		},
		closeDropdownList: function ( e ) {
			var n = $( e.target );
			if ( themeUx.$list.hasClass( 'active' ) ) {
				if ( !n.parents().hasClass( 'show-list' ) && !n.hasClass( 'show-list' ) ) {
					themeUx.$list.removeClass( 'active' );
				}
			}
		},
		selectDropdownListQuantity: function ( e ) {
			var $clickedItem = $( e.target ),
				$dummySelectContainer = $clickedItem.closest( '.dummy-select-container' ),
				$nativeSelect = $dummySelectContainer.prev( '.select-container' ).find( 'select' ),
				selectedValue = $clickedItem.attr( 'data-value' );
			$nativeSelect.val( selectedValue ).trigger( 'change' );
		},
		updateDummySelect: function ( e ) {
			var selectedValue = $( e.target ).val(),
				selectedValueDisplay = $( e.target ).find( 'option:selected' ).text(),
				$dummySelectContainer = $( e.target ).closest( '.select-container' ).next( '.dummy-select-container' ),
				$dummySelect = $dummySelectContainer.find( '.selected-quantity' );
			$dummySelect.html( selectedValueDisplay );
			$dummySelectContainer.find( '.list li' ).removeClass( 'selected' );
			$dummySelectContainer.find( '.list li[data-value="' + selectedValue + '"]' ).addClass( 'selected' );
		},
		launchVideoHero: function () {
			var videoID = themeUx.$videoHero.data( 'video' ),
				options = { videoId: videoID, start: 0 };
			themeUx.$videoHero.tubular( options );
		},
		checkMobile: function () {
			var isMobile = /iPhone|iPad|iPod|Android/i.test( navigator.userAgent );
			if ( isMobile ) {
				themeUx.$body.addClass( 'mobile' );
			}
		},
		scrollTo: function ( e ) {
			e.preventDefault();
			var scrollToId = $( this ).attr( 'href' ),
				scrollOffset = $( scrollToId ).offset().top;
			console.log( scrollOffset );
			if ( themeUx.$body.hasClass( 'page-top-menu' ) ) {
				scrollOffset -= $( '#primary-nav' ).height();
			}
			console.log( scrollOffset );
			$( 'body, html' ).animate( { scrollTop: scrollOffset }, '500' );
		},
		/**
		 * Inits the "Gift Card" and "Promo Code" section toggle behavior.
		 */
		initCheckoutSectionToggles: function() {

			themeUx.$document.on( 'click', '.toggle-section-header', function( event ) {

				if ( ! themeCheckout.$checkoutContainer.is( '.checkout-active' ) ) {
					return;
				}

				$( this ).parent( '.row' ).toggleClass( 'toggle--opened' );
			} );
		}

	};

	$( themeUx.init );
})( jQuery );

(function ( $ ) {
	window.themeMembership = {
		init: function () {
			themeCheckout.init();
			themeMembership.initProps();
			themeMembership.attachEvents();
			themeCheckout.$fields = themeCheckout.$fields.add( themeMembership.$member1Fields );
			themeMembership.$member2Container.hide();
			themeCheckout.applyMembershipCosts();
		},
		initProps: function () {
			themeMembership.$member1Container = $( '#member-1-fields' );
			themeMembership.$member2Container = $( '#member-2-fields' );
			themeMembership.$member1Fields = themeMembership.$member1Container.find( 'input[type=text], input[type=email], select' );
			themeMembership.$member2Fields = themeMembership.$member2Container.find( 'input[type=text], input[type=email], select' );
			themeMembership.$planType = $( '.membership-plan-type [type="radio"]' );
			themeMembership.$paymentMethod = $( '#payment-method-select select' );
		},
		attachEvents: function () {

			themeMembership.setupPaymentMethodUi();

			themeMembership.$planType.on( 'change', function () {
				var $this = $( this ),
					planType = $this.val(),
					json = $( '.membership_type_value' ).data( "json" )[ 'annual' ];

				if ( planType == 'dual' ) {
					themeMembership.$member2Container.show();
					themeCheckout.$fields = themeCheckout.$fields.add( themeMembership.$member2Fields );
					themeMembership.$member1Fields.each( function () {
						var placeholder = $( this ).attr( "placeholder" );
						$( this ).attr( "placeholder", placeholder + ' (Member #1)' );
					} );
				} else {
					themeMembership.$member2Container.hide();
					themeCheckout.$fields = themeCheckout.$fields.not( themeMembership.$member2Fields );
					themeMembership.$member1Fields.each( function () {
						var placeholder = $( this ).attr( "placeholder" ).replace( /\(Member #1\)/, '' );
						$( this ).attr( "placeholder", placeholder );
					} );
				}
				$( '.total_purchase_price' ).text( json[ planType ] );
			} );
		},
		/**
		 * Enables payment method UI (e.g. switching to Cash payment method) on Membership Signup and Renewal pages.
		 *
		 * @returns void
		 */
		setupPaymentMethodUi: function() {
			if ( ! themeMembership.$paymentMethod.length ) {
				return;
			}

			themeMembership.$paymentMethod.on( 'change', function () {
				var pm = $( this ).val();
				// When the payment method changes, reset the errors.
				$( '.required.error' ).toggleClass( 'error' );
				// Toggle credit card fields
				if ( pm == 'cc' ) {
					$( '.payment-info' ).slideDown();
					$( '#postal_code' ).slideDown();
					themeCheckout.$fields = themeCheckout.$fields.add( '#postal_code' );
				} else if ( pm == 'cash' ) {
					$( '.payment-info' ).slideUp();
					$( '#postal_code' ).slideUp();
					themeCheckout.$fields = themeCheckout.$fields.not( '#postal_code' );
				}
				themeCheckout.paymentMethod = pm;
			} );
		},
		getMemberData: function ( data ) {
			var interests = $( 'input[name="interests[]"]:checked' ).map( function ( _, el ) {
				return $( el ).val();
			} ).get();

			data.member_1 = {
				first_name: $( '#member_first_name' ).val(),
				last_name: $( '#member_last_name' ).val(),
				email: $( '#member_email' ).val(),
				mailing_address: $( '#mailing_address' ).val(),
				mailing_address_2: $( '#mailing_address_2' ).val(),
				mailing_city: $( '#mailing_city' ).val(),
				mailing_state: $( '#state' ).val(),
				mailing_country: $( '#country' ).val(),
				mailing_postal_code: $( '#mailing_postal_code' ).val(),
				birthdate: $( '#birthday_year' ).val() + '-' + $( '#birthday_month' ).val() + '-' + $( '#birthday_day' ).val(),
				phone: $( '#phone_number' ).val(),
				interest: interests,
				acquisition_source: $( '#user-where' ).val(),
			};
			if ( ($( '#checkout' ).length && themeCheckout.order.membership_plan.selected === 'dual') || $( '#first_name_2' ).is( ':visible' ) ) {
				data.member_2 = {
					first_name: $( '#first_name_2' ).val(),
					last_name: $( '#last_name_2' ).val(),
					email: $( '#email_2' ).val(),
					birthdate: $( '#birthday_year_2' ).val() + '-' + $( '#birthday_month_2' ).val() + '-' + $( '#birthday_day_2' ).val()
				};
			}
			if ( $( '#checkout' ).length ) {
				data.order.email = data.member_1.email;
				if ( themeCheckout.paymentMethod == 'cash' ) {
					data.address.postal_code = $( '#mailing_postal_code' ).val();
				}
			}
			return data;
		}
	};
})( jQuery );

(function ( $ ) {
	window.themeMembershipUpdate = {
		init: function () {
			themeMembership.initProps();
			themeMembershipUpdate.initProps();
			themeMembershipUpdate.attachEvents();
			themeMembershipUpdate.setSelects();
		},
		initProps: function () {
			themeMembershipUpdate.$form = $( '#membership-signup' );
			themeMembershipUpdate.$fields = themeMembership.$member1Fields.add( themeMembership.$member2Fields );
			themeMembershipUpdate.$updateConfirmation = $( '#membership-update-confirmation' );
			themeMembershipUpdate.$submitButton = $( '#submit-membership-update' );
			themeMembershipUpdate.$validateSubmitButton = $( '#submit-update-validation' );
			themeMembershipUpdate.$validationError = $( '#validation-error' );
			themeMembershipUpdate.$validationWindow = $( '#membership-update-validation-container' );
			themeMembershipUpdate.validated = false;
		},
		attachEvents: function () {
			themeMembership.setupPaymentMethodUi();

			themeMembershipUpdate.$submitButton.on( 'click', themeMembershipUpdate.updateMemberDetails );
			themeMembershipUpdate.$validateSubmitButton.on( 'click', themeMembershipUpdate.validateMembershipAccess );
			themeMembershipUpdate.$fields.on( 'change', function () {
				themeMembershipUpdate.$submitButton.removeClass( 'success' ).html( 'Save' );
			} )
		},
		updateMemberDetails: function ( e ) {
			e.preventDefault();
			if ( !themeMembershipUpdate.validated ) {
				return;
			}
			var $this = $( this );
			$this.html( 'Please wait...' ).addClass( 'processing' )
			$( '#update-error' ).html( '' );
			var data = $.extend( themeMembership.getMemberData( {} ), themeMembershipUpdate.getData() );

			$.ajax( {
				method: 'POST',
				url: window.ajaxurl || window.themeSettings.ajaxUrl,
				data: data,
				success: function ( response ) {
					if ( response === 'success' ) {
						themeMembershipUpdate.$submitButton.removeClass( 'processing' ).addClass( 'success' ).html( 'update saved!' ).prop( 'disabled', true );
					} else {
						var msg = response.data ? response.data[ 0 ] : 'We were unable to save your details, please try again.';
						$( '#update-error' ).html( msg ).css( 'visibility', 'visible' );
						themeMembershipUpdate.$submitButton.removeClass( 'processing' ).html( 'Save' );
					}
				},
				error: function () {
					alert( 'We were unable to save your details, please try again.' );
					themeMembershipUpdate.$submitButton.removeClass( 'processing' ).html( 'Save' );
				}
			} )
		},
		validateMembershipAccess: function ( e ) {
			e.preventDefault();
			themeMembershipUpdate.$validationError.removeClass( 'visible' );
			themeMembershipUpdate.$validateSubmitButton.attr( 'value', 'Checking...' );
			$.ajax( {
				method: 'POST',
				url: window.ajaxurl || window.themeSettings.ajaxUrl,
				data: {
					action: 'fb_membership_update_validate_access',
					_ajax_nonce: $( '#fb_membership_update_validate_nonce' ).val(),
					email: $( '#membership-update-validation-form #member-email' ).val(),
					code: $( '#membership-update-validation-form #member-code' ).val(),
					membership_id: typeof theme_posts != 'undefined' ? theme_posts[ 0 ].ID : ''
				},
				success: function ( response ) {
					if ( response.success === false ) {
						themeMembershipUpdate.$validationError.html( response.data.join( ', ' ) ).addClass( 'visible' );
						themeMembershipUpdate.$validateSubmitButton.attr( 'value', 'Continue' );
					} else {
						themeMembershipUpdate.$validationWindow.css( 'height', '0px' );
						themeMembershipUpdate.validated = true;
					}
				}
			} );
		},
		getData: function () {
			return {
				'action': 'fb_membership_update',
				'membership_id': theme_posts[ 0 ].ID,
				'_ajax_nonce': $( '#fb_membership_update_nonce' ).val()
			}
		},
		setSelects: function () {
			themeMembershipUpdate.$form.find( 'select' ).each( function ( i, e ) {
				var $e = $( e ),
					value = $( e ).data( 'selected' );
				if ( value !== '' ) {
					if ( typeof value === 'string' || value instanceof String )
						value = value.replace( /(\")/g, '\\$1' );
					$e.find( 'option[value="' + value + '"]' ).prop( 'selected', true );
				}
			} )
		}
	};
})( jQuery );

(function ( $ ) {
	window.themeTicketPack = {
		init: function () {
			themeCheckout.init();
			themeTicketPack.initProps();
			themeTicketPack.attachEvents();
			themeCheckout.applyTicketPackCosts();
		},
		initProps: function () {
			themeTicketPack.$paymentMethod = $( '#payment-method-select select' );
		},
		attachEvents: function () {
			if ( themeTicketPack.$paymentMethod.length ) {
				themeTicketPack.$paymentMethod.on( 'change', function () {
					var pm = $( this ).val();
					// When the payment method changes, reset the errors.
					$( '.required.error' ).toggleClass( 'error' );
					// Toggle credit card fields
					if ( pm === 'cc' ) {
						$( '.payment-info' ).slideDown();
						$( '#postal_code' ).slideDown();
						themeCheckout.$fields = themeCheckout.$fields.add( '#postal_code' );
					} else if ( pm === 'cash' ) {
						$( '.payment-info' ).slideUp();
						$( '#postal_code' ).slideUp();
						themeCheckout.$fields = themeCheckout.$fields.not( '#postal_code' );
					}
					themeCheckout.paymentMethod = pm;
				} );
			}
		},
	};
})( jQuery );

(function ( $ ) {
	window.virtualCinemaPanel = {
		init: function () {

			virtualCinemaPanel.cacheSections();

			$( window ).on( 'load', virtualCinemaPanel.equalizePosterHeights );
			$( window ).on( 'resize', virtualCinemaPanel.equalizePosterHeights );
		},
		cacheSections: function() {
			virtualCinemaPanel.sections = [];

			$( '.virtual-cinema__section' ).each( function( i, section ) {
				virtualCinemaPanel.sections[ i ] = section;
			} );
		},
		equalizePosterHeights: function() {

			$.each( virtualCinemaPanel.sections, function( i, section ) {
				const $posters = $( section ).find( '.virtual-cinema__movie img' );
				let maxHeight = 0;

				$posters.each( function( j, poster ) {
					if ( $( poster ).height() > maxHeight ) {
						maxHeight = $(poster).height();
					}
				} );

				$posters.each( function( j, poster ) {
					$( poster ).css( 'min-height', maxHeight );
				} );
			} );

		}
	};
})( jQuery );

//# sourceMappingURL=development.js.map
